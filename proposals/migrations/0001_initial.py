# Generated by Django 5.1.9 on 2025-05-15 20:52

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("core", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Proposal",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "title",
                    models.CharField(
                        help_text="Title of the proposal",
                        max_length=200,
                        verbose_name="title",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Detailed description of the proposal",
                        verbose_name="description",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("active", "Active"),
                            ("under_review", "Under Review"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("implemented", "Implemented"),
                        ],
                        default="draft",
                        help_text="Current status of the proposal",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("infrastructure", "Infrastructure"),
                            ("education", "Education"),
                            ("healthcare", "Healthcare"),
                            ("security", "Security"),
                            ("environment", "Environment"),
                            ("economy", "Economy"),
                            ("social", "Social Services"),
                            ("other", "Other"),
                        ],
                        help_text="Category of the proposal",
                        max_length=20,
                        verbose_name="category",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "landmark",
                    models.ForeignKey(
                        blank=True,
                        help_text="Specific landmark this proposal is for (optional)",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="proposals",
                        to="core.landmark",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        help_text="Location this proposal is for",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="proposals",
                        to="core.location",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "proposal",
                "verbose_name_plural": "proposals",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Reward",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "amount",
                    models.PositiveIntegerField(
                        help_text="Amount of reward points",
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="amount",
                    ),
                ),
                (
                    "action_type",
                    models.CharField(
                        choices=[
                            ("proposal_created", "Proposal Created"),
                            ("vote_added", "Vote Added"),
                        ],
                        help_text="Type of action that earned the reward",
                        max_length=20,
                        verbose_name="action type",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "proposal",
                    models.ForeignKey(
                        help_text="Proposal the reward is for",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rewards",
                        to="proposals.proposal",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User receiving the reward",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rewards",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "reward",
                "verbose_name_plural": "rewards",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Vote",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "proposal",
                    models.ForeignKey(
                        help_text="Proposal being voted on",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="votes",
                        to="proposals.proposal",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User who voted",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="votes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "vote",
                "verbose_name_plural": "votes",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="proposal",
            index=models.Index(fields=["status"], name="proposals_p_status_aed14b_idx"),
        ),
        migrations.AddIndex(
            model_name="proposal",
            index=models.Index(
                fields=["category"], name="proposals_p_categor_c89d2e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="proposal",
            index=models.Index(
                fields=["location"], name="proposals_p_locatio_a64e0c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="proposal",
            index=models.Index(
                fields=["created_at"], name="proposals_p_created_877293_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="reward",
            index=models.Index(fields=["user"], name="proposals_r_user_id_7aff2f_idx"),
        ),
        migrations.AddIndex(
            model_name="reward",
            index=models.Index(
                fields=["proposal"], name="proposals_r_proposa_10d200_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="reward",
            index=models.Index(
                fields=["action_type"], name="proposals_r_action__212394_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="reward",
            index=models.Index(
                fields=["created_at"], name="proposals_r_created_826bad_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="vote",
            index=models.Index(
                fields=["proposal", "user"], name="proposals_v_proposa_a7ede9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="vote",
            index=models.Index(
                fields=["created_at"], name="proposals_v_created_4bf3f9_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="vote",
            constraint=models.UniqueConstraint(
                fields=("proposal", "user"), name="unique_proposal_vote"
            ),
        ),
    ]
