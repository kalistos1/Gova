# Generated by Django 5.1.9 on 2025-05-15 20:52

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("core", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "query",
                    models.TextField(
                        help_text="Message content (text or transcribed from voice)",
                        verbose_name="message",
                    ),
                ),
                (
                    "is_read",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the message has been read",
                        verbose_name="read status",
                    ),
                ),
                (
                    "is_anonymous",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the message was sent anonymously",
                        verbose_name="anonymous status",
                    ),
                ),
                (
                    "transcription_confidence",
                    models.FloatField(
                        blank=True,
                        help_text="Confidence score for voice transcription (0.0 to 1.0)",
                        null=True,
                        verbose_name="transcription confidence",
                    ),
                ),
                (
                    "content_type",
                    models.CharField(
                        choices=[("text", "Text"), ("voice", "Voice")],
                        default="text",
                        help_text="Type of message content",
                        max_length=20,
                        verbose_name="content type",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "landmark",
                    models.ForeignKey(
                        blank=True,
                        help_text="Landmark related to the message",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="messages",
                        to="core.landmark",
                        verbose_name="landmark",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        blank=True,
                        help_text="Location related to the message",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="messages",
                        to="core.location",
                        verbose_name="location",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        help_text="Parent message if this is a response",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="replies",
                        to="engagement.message",
                        verbose_name="parent message",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who sent the message (optional for anonymous messages)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sent_messages",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="sender",
                    ),
                ),
            ],
            options={
                "verbose_name": "message",
                "verbose_name_plural": "messages",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "created_at"],
                        name="engagement__user_id_58568c_idx",
                    ),
                    models.Index(
                        fields=["parent", "created_at"],
                        name="engagement__parent__c27597_idx",
                    ),
                    models.Index(
                        fields=["is_read"], name="engagement__is_read_909002_idx"
                    ),
                    models.Index(
                        fields=["is_anonymous"], name="engagement__is_anon_d42832_idx"
                    ),
                    models.Index(
                        fields=["content_type"], name="engagement__content_96da39_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "title",
                    models.CharField(
                        help_text="Notification title",
                        max_length=200,
                        verbose_name="title",
                    ),
                ),
                (
                    "message",
                    models.TextField(
                        help_text="Notification content", verbose_name="message"
                    ),
                ),
                (
                    "target_type",
                    models.CharField(
                        choices=[("user", "User"), ("group", "Group")],
                        help_text="Type of notification target (user or group)",
                        max_length=10,
                        verbose_name="target type",
                    ),
                ),
                (
                    "target_id",
                    models.UUIDField(
                        help_text="ID of the target user or group",
                        verbose_name="target id",
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                        ],
                        default="medium",
                        help_text="Notification priority level",
                        max_length=10,
                        verbose_name="priority",
                    ),
                ),
                (
                    "is_read",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the notification has been read",
                        verbose_name="read status",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        help_text="User who sent the notification",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="sent_notifications",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="sender",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "notification",
                "verbose_name_plural": "notifications",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["sender", "created_at"],
                        name="engagement__sender__062b28_idx",
                    ),
                    models.Index(
                        fields=["target_type", "target_id"],
                        name="engagement__target__49d920_idx",
                    ),
                    models.Index(
                        fields=["priority"], name="engagement__priorit_d1d1a5_idx"
                    ),
                    models.Index(
                        fields=["is_read"], name="engagement__is_read_56f68c_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="RecipientGroup",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the recipient group",
                        max_length=100,
                        verbose_name="name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Description of the group and its purpose",
                        verbose_name="description",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether the group is currently active",
                        verbose_name="active status",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "members",
                    models.ManyToManyField(
                        help_text="Users who belong to this group",
                        related_name="recipient_groups",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="members",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "recipient group",
                "verbose_name_plural": "recipient groups",
                "ordering": ["name"],
                "indexes": [
                    models.Index(fields=["name"], name="engagement__name_4e70ae_idx"),
                    models.Index(
                        fields=["is_active"], name="engagement__is_acti_6293ab_idx"
                    ),
                ],
            },
        ),
    ]
